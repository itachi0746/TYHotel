{"version":3,"sources":["webpack:///./src/common/index.js","webpack:///./src/common/utils.js","webpack:///./src/common/server.js"],"names":["window","GoToPage","__WEBPACK_IMPORTED_MODULE_0__utils__","goToPage","utils","__webpack_exports__","pageName","defaultUrl","paramter","theParamterArray","key","push","location","href","join","getUrlParams","args","pairs","search","substring","split","i","length","pos","indexOf","argname","toLowerCase","value","decodeURIComponent","IOSConfig","userAgent","navigator","console","log","addEventListener","e","self","reload","history","replaceState","title","url","throttle","action","delay","timeout","lastRun","context","this","arguments","runCallback","Date","now","apply","setTimeout","canRefresh","timeStamp","interval","valueOf","getClientHeight","clientHeight","document","documentElement","add0","m","formatTime","shijianchuo","hm","time","y","getFullYear","getMonth","d","getDate","h","getHours","mm","getMinutes","JsonToFormData","jsonData","form","FormData","append","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_json_stringify___default","createFormData","dataArr","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_get_iterator___default","next","done","obj","name","trim","err","fieldName","return","createFormData2","dataObj","formatDate","dateStr","theResult","theReg","theReg2","test","substr","eval","handleTime","isEmptyObject","isEmpty","param","empty","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_typeof___default","checkPSW","theFieldArr","psw1","psw2","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","checkPSW2","reg","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","checkRequired","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","required","clearHistory","jsBridge","clearCache","formatObj","handleMapData","mapObj","resultArr","computeRequired","arr","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","checkPhoneNum","theValue","checkURL","checkAge","Value","min","max","formatZero","num","formatArea","provinceName","cityName","delStr","str","target","checkCreditCode","val","toast","me","msg","type","opt","duration","message","$toast","success","fail","loading","mask","forbidClick","clear","getLocation","lng","lat","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default","a","resolve","reject","geolocation","getCurrentPosition","position","coords","longitude","latitude","getRandomInt","Math","floor","random","ROOT","Axios","__WEBPACK_IMPORTED_MODULE_5_axios___default","create","baseURL","interceptors","request","use","config","error","Object","__WEBPACK_IMPORTED_MODULE_4_vant_es_notify__","data","background","color","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_promise___default","response","res","Success","__WEBPACK_IMPORTED_MODULE_1_vant_es_toast__","ErrMsg","code","postData","params","theRequestUrl","post","then","catch","install","Vue","Option","defineProperty","prototype"],"mappings":"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","file":"static/js/common-api.425dc2e9e83c5f7ef762.js","sourcesContent":["import utils from './utils'\nimport { postData } from './server'\nwindow.GoToPage = utils.goToPage\nwindow.utils = utils\nexport { postData, utils }\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/index.js","/* eslint-disable */\nexport default {\n  /**\n   * 导航到指定页面\n   * @param pageName\n   * @param defaultUrl\n   * @param paramter\n   */\n  goToPage: function (pageName, defaultUrl, paramter) {\n    let theParamterArray = []\n    for (let key in paramter) {\n      theParamterArray.push(key + '=' + paramter[key])\n    }\n    location.href = defaultUrl + '?' + theParamterArray.join('&')\n  },\n  // 获得url中的参数,放在对象中,然后返回这个对象\n  getUrlParams: function () {\n    let args = {}\n    let query = location.search.substring(1) // 获取查询串\n    let pairs = query.split('&')// 在逗号处断开\n    for (let i = 0; i < pairs.length; i++) {\n      let pos = pairs[i].indexOf('=')// 查找name=value\n      if (pos === -1) continue// 如果没有找到就跳过\n      let argname = pairs[i].substring(0, pos).toLowerCase()// 提取name\n      let value = pairs[i].substring(pos + 1)// 提取value\n      args[argname] = decodeURIComponent(value)// 存为属性\n    }\n    return args\n  },\n  IOSConfig: function () {\n    let userAgent = navigator.userAgent\n    if (userAgent.indexOf('iPhone') > -1 || userAgent.indexOf('Mac') > -1) {\n      console.log('on iphone/mac')\n      window.addEventListener('popstate', function (e) {\n        // alert(\"后退\");\n        console.log('后退')\n        self.location.reload()\n      }, false)\n      let state = {\n        title: '',\n        url: '#'\n      }\n      window.history.replaceState(state, '', '#')\n    }\n  },\n  /**\n   * 节流函数。\n   */\n  throttle: function (action, delay) {\n    let timeout = null\n    let lastRun = 0\n    return function () {\n      if (timeout) return\n      let elapsed = Date.now() - lastRun\n      let context = this\n      let args = arguments\n      let runCallback = function () {\n        lastRun = Date.now()\n        timeout = false\n        action.apply(context, args)\n      }\n      if (elapsed >= delay) {\n        runCallback()\n      } else {\n        timeout = setTimeout(runCallback, delay)\n      }\n    }\n  },\n  /**\n   * 判断是否已经过指定的分钟\n   * @param timeStamp 上一个时间戳(毫秒)\n   * @param interval 时间间隔(分钟)\n   */\n  canRefresh: function (timeStamp, interval) {\n    // debugger\n    let curTime = new Date().valueOf()\n    interval = interval * 60000\n    timeStamp = timeStamp.valueOf()\n    let result = curTime - timeStamp\n    return result > interval\n  },\n  getClientHeight: function () {\n    let clientHeight = 0\n    // if (document.body.clientHeight && document.documentElement.clientHeight) {\n    //   clientHeight = (document.body.clientHeight < document.documentElement.clientHeight) ? document.body.clientHeight : document.documentElement.clientHeight;\n    // } else {\n    //   clientHeight = (document.body.clientHeight > document.documentElement.clientHeight) ? document.body.clientHeight : document.documentElement.clientHeight;\n    // }\n    if (document.documentElement.clientHeight) {\n      clientHeight = document.documentElement.clientHeight\n    }\n    console.log('可视区域高度:', clientHeight)\n    return clientHeight\n  },\n  add0 (m) {\n    return m < 10 ? '0' + m : m\n  },\n  /**\n   * 时间戳转为为普通日期格式\n   * @param shijianchuo 时间戳\n   * @param hm 是否返回小时 分钟\n   * @returns {string}\n   */\n  formatTime: function (shijianchuo, hm) {\n    //shijianchuo是整数，否则要parseInt转换\n    // let time = new Date(shijianchuo)\n\n    let time = shijianchuo, result\n    let y = time.getFullYear()\n    let m = time.getMonth() + 1\n    let d = time.getDate()\n    let h = time.getHours()\n    let mm = time.getMinutes()\n    if (hm) {\n      result = y + '-' + this.add0(m) + '-' + this.add0(d) + ' ' + this.add0(h) + ':' + this.add0(mm)\n    } else {\n      result = y + '-' + this.add0(m) + '-' + this.add0(d)\n    }\n    // let s = time.getSeconds()\n    // return y + '-' + add0(m) + '-' + add0(d) + ' ' + add0(h) + ':' + add0(mm) + ':' + add0(s)\n    // return y + '-' + this.add0(m) + '-' + this.add0(d)\n    return result\n  },\n  /**\n   * json转formdata\n   * @param jsonData\n   * @returns {*}\n   */\n  JsonToFormData: function (jsonData) {\n    let form = new FormData()\n    form.append('param', JSON.stringify(jsonData))\n    return form\n  },\n  /**\n   * 把数组里的对象转为formdata\n   * @param dataArr\n   */\n  createFormData: function (dataArr) {\n    let form = new FormData()\n    for (let obj of dataArr) {\n      if (!obj.value) {\n        console.log(`${obj.name} 的值为 ${obj.value}`)\n        obj.value = ''\n        // return false\n      }\n      try {\n        obj.value = obj.value.trim() // 去除空格\n      } catch (err) {\n        console.log(err)\n      }\n      form.append(obj.fieldName, obj.value)\n    }\n    return form\n  },\n  /**\n   * 把对象转为formdata\n   * @param dataObj\n   */\n  createFormData2: function (dataObj) {\n    let form = new FormData()\n    for (let key in dataObj) {\n      if (!dataObj[key]) {\n        console.log(`${key} 为空: ${dataObj[key]}`)\n        dataObj[key] = ''\n        // return false\n      }\n      form.append(key, dataObj[key])\n    }\n    return form\n  },\n  /**\n   * 格式化后台返回的日期字符串, 返回时间戳\n   * @param dateStr 例如 '/Date(157737600000)/'\n   */\n  formatDate: function (dateStr) {\n    if (!dateStr || typeof dateStr !== 'string') {\n      console.log('参数错误:', dateStr)\n      return ''\n    }\n    // debugger\n    let theResult = dateStr\n    let theReg = /\\/Date\\(\\d*\\)\\//g\n    let theReg2 = /\\/Date\\(-{1}\\d*\\)\\//g\n    if (theReg2.test(theResult)) { // 带负号的时间, 返回为空值\n      console.log(`时间格式不正确: ${theResult}`)\n      return ''\n    }\n    if (!theReg.test(theResult)) {\n      console.log(`时间格式不正确: ${theResult}`)\n      return ''\n    }\n    theResult = 'new ' + theResult.substr(1, theResult.length - 2)\n    // console.log(theResult)\n\n    theResult = eval(theResult)\n    // console.log(theResult)\n\n    return theResult\n  },\n  /**\n   * 统一处理时间\n   * @param dateStr /Date(157737600000)/\n   * @param hm 是否需要小时分钟\n   */\n  handleTime: function (dateStr, hm = false) {\n    // console.log(dateStr)\n    let theResult = this.formatDate(dateStr)\n    if (!theResult) {\n      return theResult\n    }\n    theResult = this.formatTime(theResult, hm)\n    return theResult\n  },\n  /**\n   * 判断是空对象\n   * @param obj 对象\n   * @returns {boolean}\n   */\n  isEmptyObject: function (obj) {\n    for (let key in obj) {\n      return false\n    }\n    return true\n  },\n  /**\n   * 判断是不是空的\n   * @param param\n   * @returns {boolean}\n   */\n  isEmpty: function (param) {\n    let me = this\n    let theType = typeof param\n    let empty = false\n    switch (theType)\n    {\n      case 'string':\n        if (param === '') {\n          console.log('参数为空字符串')\n          empty = true\n        }\n        break\n      case 'array':\n        if (param.length === 0) {\n          console.log('参数为空数组')\n          empty = true\n        }\n        break\n      case 'object':\n        empty = me.isEmptyObject(param)\n        break\n    }\n    return empty\n  },\n  /**\n   * 检查密码是否相同\n   */\n  checkPSW (theFieldArr) {\n    // debugger\n    let psw1, psw2\n    for (let obj of theFieldArr) {\n      if (obj.name === '密码1') {\n        psw1 = obj.value\n      } else if (obj.name === '密码2') {\n        psw2 = obj.value\n      }\n    }\n    return psw1 === psw2\n  },\n  /**\n   * 检查密码长度 长度在6~20之间，只能包含字母、数字和下划线\n   */\n  checkPSW2 (theFieldArr) {\n    // debugger\n    let reg = /^(\\w){6,20}$/, psw1\n    for (let obj of theFieldArr) {\n      if (obj.name === '密码1') {\n        psw1 = obj.value\n        return reg.test(psw1)\n      }\n    }\n  },\n  /**\n   * 检查必填项\n   */\n  checkRequired (theFieldArr) {\n    for (let obj of theFieldArr) {\n      if (!obj.required) {\n        continue\n      }\n      if (!obj.value) {\n        console.log('必填值不能为空', obj.fieldName)\n        return false\n      }\n    }\n    return true\n  },\n  /**\n   * 登录后清除历史记录\n   */\n  clearHistory () {\n    try {\n      if (jsBridge) {\n        jsBridge.clearHistory()\n        console.log('清除历史记录')\n      } else {\n        console.log('没有jsBridge')\n      }\n    } catch (e) {\n      console.log(e)\n      console.log('没有jsBridge')\n    }\n  },\n  /**\n   * 清除缓存\n   */\n  clearCache () {\n    try {\n      if (jsBridge) {\n        jsBridge.clearCache()\n        console.log('清除缓存')\n      } else {\n        console.log('没有jsBridge')\n      }\n    } catch (e) {\n      console.log(e)\n      console.log('没有jsBridge')\n    }\n  },\n  /**\n   * 格式化数据对象的时间戳字符串, null字符串\n   */\n  formatObj (obj, hm) {\n    for (let key in obj) { // 格式化时间\n      if (typeof obj[key] !== 'string') {\n        if (obj[key] === null || obj[key] === undefined) { // 格式化null\n          obj[key] = ''\n        }\n        continue\n      }\n      // obj[key] = obj[key].trim()\n      if (obj[key].indexOf('/Date') !== -1) {\n        obj[key] = this.handleTime(obj[key], hm)\n      }\n      if (obj[key] === 'null') { // 格式化'null'\n        obj[key] = ''\n      }\n    }\n    return obj\n  },\n  /**\n   * 处理要显示的数据\n   * @param mapObj 字段映射\n   * @param dataObj 数据对象\n   */\n  handleMapData (mapObj, dataObj) {\n    let resultArr = []\n    for (let key in mapObj) {\n      if (!dataObj[key]) { // 空则跳过\n        console.log(`字段 ${key} 没有值: ${dataObj[key]}`)\n        // continue\n      }\n      const obj = {\n        key: mapObj[key],\n        value: dataObj[key]\n      }\n      resultArr.push(obj)\n    }\n    return resultArr\n  },\n  /**\n   * 计算字段数组中, 必填项是否已有值\n   * @param arr\n   */\n  computeRequired (arr) {\n    for (let obj of arr) {\n      if (!obj.required) {\n        continue\n      }\n      if (!obj.value) {\n        return true\n      }\n    }\n    return false\n  },\n  /**\n   * 检查字段 手机的值\n   * @param theValue\n   */\n  checkPhoneNum (theValue) {\n    let reg = /^(13[0-9]|14[0-9]|15[0-9]|18[0-9]|17[0-9])\\d{8}$/\n    return reg.test(theValue)\n  },\n  /**\n   * 检查字段 网址的值\n   * @param theValue\n   */\n  checkURL (theValue) {\n    // let reg = /^((https?|ftp|news):\\/\\/)?([a-z]([a-z0-9\\-]*[\\.。])+([a-z]{2}|aero|arpa|biz|com|coop|edu|gov|info|int|jobs|mil|museum|name|nato|net|org|pro|travel)|(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))(\\/[a-z0-9_\\-\\.~]+)*(\\/([a-z0-9_\\-\\.]*)(\\?[a-z0-9+_\\-\\.%=&]*)?)?(#[a-z][a-z0-9_]*)?$/\n    let reg = /^((https|http|ftp|rtsp|mms){1}(:\\/\\/){0,1})www\\.(([A-Za-z0-9-~]+)\\.)+([A-Za-z0-9-~\\/])+$/\n    return reg.test(theValue)\n  },\n  /**\n   * 检查年龄\n   * @param theValue 字符串\n   */\n  checkAge (theValue) {\n    if (!theValue) {\n      return false\n    }\n    let Value = eval(theValue), min = 10, max = 70\n    return Value<=min || Value>=max\n  },\n  /**\n   * 格式化 数字 0 和负数\n   * @param num 数字\n   */\n  formatZero (num) {\n    if (typeof num !== 'number') {\n      return num\n    }\n    return num <= 0 ? '' : num\n  },\n  /**\n   * 格式化地区名 去掉 省 市 两字\n   * @param provinceName\n   * @param cityName\n   */\n  formatArea (provinceName, cityName) {\n    if (typeof provinceName !== 'string' || typeof cityName !== 'string') {\n      return\n    }\n    let sheng = '省', shi = '市'\n    provinceName = this.delStr(provinceName, sheng)\n    cityName = this.delStr(cityName, shi)\n    return provinceName + cityName\n  },\n  /**\n   * 删除字符串中的特定字符\n   * @param str 原来的字符串\n   * @param target 要删除的目标字符串\n   */\n  delStr (str, target) {\n    if (typeof str !== 'string' || typeof target !== 'string') {\n      return str\n    }\n    let i = str.indexOf(target)\n    if (i === -1) {\n      console.log(`目标字符不存在: ${str},${target}`)\n      return str\n    }\n    return str.substr(0, i)\n  },\n  /**\n   * 检查统一社会信用代码\n   * 市面上现在有2中企业营业执照注册号(统一社会信用代码)，一种是15位(从2007年开始)，一种是18位(从2015年开始)\n   * @param val\n   */\n  checkCreditCode (val) {\n    if (typeof val !== 'string') {\n      console.log(`参数类型错误: ${val}`)\n      return\n    }\n    let reg = /(^(?:(?![IOZSV])[\\dA-Z]){2}\\d{6}(?:(?![IOZSV])[\\dA-Z]){10}$)|(^\\d{15}$)/\n    return reg.test(val)\n  },\n  /**\n   * vant的toast\n   * @param me vue实例对象\n   * @param msg 要显示的文字\n   * @param type toast类型 默认是success\n   * @param time 显示时间 默认为2000毫秒\n   */\n  toast (me, msg, type = 'success', time = 2000) {\n    let opt = {\n      duration: time,\n      message: msg\n    }\n    let loadingOpt = {\n      duration: 0,\n      message: '加载中...',\n      mask: true,\n      forbidClick: true, // 禁用背景点击\n    }\n    if (type === 'success') {\n      me.$toast.success(opt)\n    } else if (type === 'fail') {\n      me.$toast.fail(opt)\n    } else if (type ==='loading') {\n      me.$toast.loading(loadingOpt)\n    } else if (type === 'clear') {\n      me.$toast.clear()\n    }\n  },\n  /**\n   * 获取经纬度\n   */\n  getLocation () {\n    let lng, // 经度\n      lat; // 纬度\n    return new Promise(function (resolve, reject) {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          function (position) {\n            console.log('经度:', position.coords.longitude)\n            console.log('纬度:', position.coords.latitude)\n            lng = position.coords.longitude\n            lat = position.coords.latitude\n            resolve({'lng': lng, 'lat': lat})\n          },\n          function (e) {\n            console.log('获取经纬度失败')\n            reject(e.message)\n          }\n        )\n      } else {\n        console.log('该浏览器不支持获取地理位置。')\n        lng = lat = 0\n        resolve({'lng': lng, 'lat': lat})\n\n      }\n    })\n\n  },\n  /**\n   * 返回随机整数\n   * @param max 最大值 int\n   * @returns {number}\n   */\n  getRandomInt (max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/utils.js","import axios from 'axios'\nimport { Notify, Toast } from 'vant'\n\nlet ROOT\n// 环境的切换\nif (process.env.NODE_ENV === 'development') {\n  // 开发环境下的代理地址，解决本地跨域跨域，配置在config目录下的index.js dev.proxyTable中\n  ROOT = '/api'\n  // ROOT = 'http://mockjs.com'\n} else {\n  // 生产环境下的地址\n  ROOT = '/ActivityHotelService'\n}\n\nconst Axios = axios.create({\n  baseURL: ROOT, // 因为我本地做了反向代理\n  timeout: 10000\n  // responseType: \"json\",\n  // withCredentials: true, // 是否允许带cookie这些\n  // headers: {\n  //   \"Content-Type\": \"application/x-www-form-urlencoded\"\n  // },\n  // transformRequest: [function (data) {\n  //   let ret = '';\n  //   for (let i in data) {\n  //     ret += encodeURIComponent(i) + '=' + encodeURIComponent(data[i]) + '&'\n  //   }\n  //   return ret\n  // }],\n})\n\n// POST(添加请求拦截器)\nAxios.interceptors.request.use(\n  config => {\n    // 每次发送请求之前判断vuex中是否存在token\n    // 如果存在，则统一在http请求的header都加上token，这样后台根据token判断你的登录情况\n    // 即使本地存在token，也有可能token是过期的，所以在响应拦截器中要对返回状态进行判断\n    // const token = store.state.token;\n    // token && (config.headers.Authorization = token);\n    return config\n  },\n\n  error => {\n    // error 的回调信息\n    Notify({\n      message: error.data,\n      duration: 2000,\n      background: '#fef0f0',\n      color: 'red'\n    })\n    return Promise.reject(error)\n  }\n)\n\n// 返回状态判断(添加响应拦截器)\nAxios.interceptors.response.use(\n  res => {\n    // 对响应数据做些事\n    if (!res.data.Success) {\n      Toast.clear()\n      Notify({\n        message: res.data.ErrMsg, // 弹出错误信息\n        duration: 2000,\n        background: '#fef0f0',\n        color: 'red'\n      })\n      return Promise.reject(res.data.ErrMsg) // 返回promise对象,把错误信息传下去\n    }\n    return res\n  },\n  error => {\n    Toast.clear()\n    if (error.code === 'ECONNABORTED' && error.message.indexOf('timeout') !== -1) { // 超时 todo 超时处理\n      Notify({\n        message: '请求超时', // 弹出错误信息\n        duration: 2000,\n        background: '#fef0f0',\n        color: 'red'\n      })\n    } else {\n      Notify({\n        message: '请求出错', // 弹出错误信息\n        duration: 2000,\n        background: '#fef0f0',\n        color: 'red'\n      })\n    }\n\n    // 下面是接口回调的status\n\n    // if (error.response.status === 403) {\n    //   router.push({\n    //     path: \"/error/403\"\n    //   });\n    // }\n    // if (error.response.status === 500) {\n    //   router.push({\n    //     path: \"/error/500\"\n    //   });\n    // }\n    // if (error.response.status === 502) {\n    //   router.push({\n    //     path: \"/error/502\"\n    //   });\n    // }\n    // if (error.response.status === 404) {\n    //   router.push({\n    //     path: \"/error/404\"\n    //   });\n    // }\n\n    // 返回 response 里的错误信息\n    // let errorInfo = error;\n    return Promise.reject(error)\n  }\n)\n\n// 封装axios的post请求\nlet postData = function (url, params = {}) {\n  let theRequestUrl = url\n  console.log('开始访问:' + theRequestUrl)\n  return new Promise((resolve, reject) => {\n    Axios.post(url, params)\n      .then(response => {\n        resolve(response.data)\n      })\n      .catch((error) => {\n        console.log(theRequestUrl + ':请求出错')\n        reject(error)\n      })\n  })\n}\n\nexport { postData }\n\n// 对axios的实例重新封装成一个plugin ,方便 Vue.use(xxxx)\nexport default {\n  install: function (Vue, Option) {\n    Object.defineProperty(Vue.prototype, '$http', {value: Axios})\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/server.js"],"sourceRoot":""}